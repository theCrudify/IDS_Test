// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PO.Infrastructure.Data;

#nullable disable

namespace PO.Infrastructure.Migrations
{
    [DbContext(typeof(PODbContext))]
    [Migration("20250706012547_UpdatedSeedData")]
    partial class UpdatedSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PO.Domain.Entities.MasterData.ApprovalMatrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcknowledgeRoleId")
                        .HasColumnType("int");

                    b.Property<int>("ApproverRoleId")
                        .HasColumnType("int");

                    b.Property<int>("CheckerRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcknowledgeRoleId");

                    b.HasIndex("ApproverRoleId");

                    b.HasIndex("CheckerRoleId");

                    b.HasIndex("DeptId");

                    b.ToTable("master_approval_matrices", null, t =>
                        {
                            t.HasCheckConstraint("CK_ApprovalMatrix_Amount", "MinAmount <= MaxAmount");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcknowledgeRoleId = 3,
                            ApproverRoleId = 4,
                            CheckerRoleId = 2,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3909),
                            DeptId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            MaxAmount = 10000000m,
                            MinAmount = 0m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3909)
                        },
                        new
                        {
                            Id = 2,
                            AcknowledgeRoleId = 4,
                            ApproverRoleId = 5,
                            CheckerRoleId = 2,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3913),
                            DeptId = 3,
                            IsActive = true,
                            IsDeleted = false,
                            MaxAmount = 50000000m,
                            MinAmount = 10000001m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3913)
                        },
                        new
                        {
                            Id = 3,
                            AcknowledgeRoleId = 3,
                            ApproverRoleId = 4,
                            CheckerRoleId = 2,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3916),
                            DeptId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            MaxAmount = 25000000m,
                            MinAmount = 0m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3917)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("DeptHeadId")
                        .HasColumnType("int");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeptCode")
                        .IsUnique();

                    b.HasIndex("DeptHeadId");

                    b.ToTable("master_departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3538),
                            DeptCode = "TECH",
                            DeptName = "Technical Department",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3539)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3543),
                            DeptCode = "PROD",
                            DeptName = "Production Department",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3543)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3546),
                            DeptCode = "PURCH",
                            DeptName = "Purchasing Department",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3547)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("DivisionCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionCode")
                        .IsUnique();

                    b.ToTable("master_divisions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3691),
                            DivisionCode = "TECH",
                            DivisionName = "Technical Division",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3692)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3694),
                            DivisionCode = "PROD",
                            DivisionName = "Production Division",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3695)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3697),
                            DivisionCode = "QC",
                            DivisionName = "Quality Control Division",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3698)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultTaxId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultUOMId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Specification")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("StandardPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DefaultTaxId");

                    b.HasIndex("DefaultUOMId");

                    b.HasIndex("ItemCode")
                        .IsUnique();

                    b.ToTable("master_items", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Fastenal",
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3792),
                            DefaultTaxId = 1,
                            DefaultUOMId = 1,
                            Description = "Stainless Steel Screw M6x20mm",
                            IsActive = true,
                            IsDeleted = false,
                            ItemCode = "ITM001",
                            ItemName = "Screw M6x20",
                            ItemType = 0,
                            Model = "M6x20",
                            Specification = "Stainless Steel 316",
                            StandardPrice = 500m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3793)
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Shell",
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3797),
                            DefaultTaxId = 1,
                            DefaultUOMId = 2,
                            Description = "High Performance Hydraulic Oil",
                            IsActive = true,
                            IsDeleted = false,
                            ItemCode = "ITM002",
                            ItemName = "Hydraulic Oil",
                            ItemType = 0,
                            Model = "Tellus S2 M46",
                            Specification = "ISO VG 46",
                            StandardPrice = 85000m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3798)
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Pertamina",
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3802),
                            DefaultTaxId = 1,
                            DefaultUOMId = 3,
                            Description = "Engine Motor Oil SAE 15W-40",
                            IsActive = true,
                            IsDeleted = false,
                            ItemCode = "ITM003",
                            ItemName = "Motor Oil",
                            ItemType = 0,
                            Model = "Mesran Super SAE 15W-40",
                            Specification = "API CI-4/SL",
                            StandardPrice = 1250000m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3802)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3806),
                            DefaultTaxId = 1,
                            DefaultUOMId = 1,
                            Description = "Preventive maintenance service",
                            IsActive = true,
                            IsDeleted = false,
                            ItemCode = "SRV001",
                            ItemName = "Maintenance Service",
                            ItemType = 1,
                            StandardPrice = 500000m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3806)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApprovalLevel")
                        .HasColumnType("int");

                    b.Property<bool>("CanAcknowledgePO")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanApprovePO")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanCheckPO")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanCreatePO")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleCode")
                        .IsUnique();

                    b.ToTable("master_roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApprovalLevel = 0,
                            CanAcknowledgePO = false,
                            CanApprovePO = false,
                            CanCheckPO = false,
                            CanCreatePO = true,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3212),
                            IsActive = true,
                            IsDeleted = false,
                            RoleCode = "USR",
                            RoleName = "User Purchasing",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3214)
                        },
                        new
                        {
                            Id = 2,
                            ApprovalLevel = 1,
                            CanAcknowledgePO = false,
                            CanApprovePO = false,
                            CanCheckPO = true,
                            CanCreatePO = true,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3219),
                            IsActive = true,
                            IsDeleted = false,
                            RoleCode = "STF",
                            RoleName = "Staff Purchasing",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3220)
                        },
                        new
                        {
                            Id = 3,
                            ApprovalLevel = 2,
                            CanAcknowledgePO = true,
                            CanApprovePO = false,
                            CanCheckPO = true,
                            CanCreatePO = false,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3224),
                            IsActive = true,
                            IsDeleted = false,
                            RoleCode = "AMG",
                            RoleName = "Assistant Manager",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3224)
                        },
                        new
                        {
                            Id = 4,
                            ApprovalLevel = 2,
                            CanAcknowledgePO = true,
                            CanApprovePO = true,
                            CanCheckPO = false,
                            CanCreatePO = false,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3228),
                            IsActive = true,
                            IsDeleted = false,
                            RoleCode = "MGR",
                            RoleName = "Manager",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3228)
                        },
                        new
                        {
                            Id = 5,
                            ApprovalLevel = 3,
                            CanAcknowledgePO = false,
                            CanApprovePO = true,
                            CanCheckPO = false,
                            CanCreatePO = false,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3232),
                            IsActive = true,
                            IsDeleted = false,
                            RoleCode = "GM",
                            RoleName = "General Manager",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3232)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TaxType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaxCode")
                        .IsUnique();

                    b.ToTable("master_taxes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3655),
                            IsActive = true,
                            IsDeleted = false,
                            TaxCode = "M11",
                            TaxDescription = "VAT 11%",
                            TaxRate = 11.00m,
                            TaxType = "VAT",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3655)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3659),
                            IsActive = true,
                            IsDeleted = false,
                            TaxCode = "M12",
                            TaxDescription = "VAT 12%",
                            TaxRate = 12.00m,
                            TaxType = "VAT",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3660)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.UOM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BaseUnit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("ConversionFactor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UOMCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UOMDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UOMCode")
                        .IsUnique();

                    b.ToTable("master_uoms", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseUnit = "PCS",
                            ConversionFactor = 1.000000m,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3597),
                            IsActive = true,
                            IsDeleted = false,
                            UOMCode = "PCS",
                            UOMDescription = "Pieces",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3598)
                        },
                        new
                        {
                            Id = 2,
                            BaseUnit = "CAN",
                            ConversionFactor = 1.000000m,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3613),
                            IsActive = true,
                            IsDeleted = false,
                            UOMCode = "CAN3.6",
                            UOMDescription = "3.6 Liter Can",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3613)
                        },
                        new
                        {
                            Id = 3,
                            BaseUnit = "CAN",
                            ConversionFactor = 1.000000m,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3616),
                            IsActive = true,
                            IsDeleted = false,
                            UOMCode = "CAN50",
                            UOMDescription = "50 Liter Can",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3617)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployeeCode")
                        .IsUnique();

                    b.HasIndex("ManagerId");

                    b.HasIndex("RoleId");

                    b.ToTable("master_users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3853),
                            DeptId = 3,
                            Email = "john.doe@company.com",
                            EmployeeCode = "EMP001",
                            FullName = "John Doe",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "081234567890",
                            RoleId = 1,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3854)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3859),
                            DeptId = 3,
                            Email = "jane.smith@company.com",
                            EmployeeCode = "EMP002",
                            FullName = "Jane Smith",
                            IsActive = true,
                            IsDeleted = false,
                            ManagerId = 4,
                            Phone = "081234567891",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3859)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3863),
                            DeptId = 2,
                            Email = "mike.johnson@company.com",
                            EmployeeCode = "EMP003",
                            FullName = "Mike Johnson",
                            IsActive = true,
                            IsDeleted = false,
                            ManagerId = 5,
                            Phone = "081234567892",
                            RoleId = 3,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3864)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3868),
                            DeptId = 3,
                            Email = "sarah.wilson@company.com",
                            EmployeeCode = "EMP004",
                            FullName = "Sarah Wilson",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "081234567893",
                            RoleId = 4,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3868)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3872),
                            DeptId = 1,
                            Email = "david.brown@company.com",
                            EmployeeCode = "EMP005",
                            FullName = "David Brown",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "081234567894",
                            RoleId = 5,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3873)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TaxId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("VendorId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("VendorId")
                        .IsUnique();

                    b.ToTable("master_vendors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Jl. Industri No. 123, Jakarta",
                            ContactPerson = "Budi Santoso",
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3739),
                            Email = "sales@sumberteknik.com",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "021-1234567",
                            TaxId = "01.234.567.8-901.000",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3740),
                            VendorId = "V001",
                            VendorName = "PT. Sumber Teknik"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Jl. Raya Bogor KM 15, Depok",
                            ContactPerson = "Sari Dewi",
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3744),
                            Email = "info@majujaya.co.id",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "021-7654321",
                            TaxId = "01.234.567.8-902.000",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3745),
                            VendorId = "V002",
                            VendorName = "CV. Maju Jaya"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Jl. Sudirman No. 45, Jakarta Pusat",
                            ContactPerson = "Ahmad Rahman",
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3748),
                            Email = "procurement@globalsupplier.com",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "021-9876543",
                            TaxId = "01.234.567.8-903.000",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(3748),
                            VendorId = "V003",
                            VendorName = "PT. Global Supplier"
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POApprovalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ApprovalLevel")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<int>("ApproverId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("POId")
                        .HasColumnType("int");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("POId", "ApprovalLevel");

                    b.ToTable("t_po_approval_histories", null, t =>
                        {
                            t.HasCheckConstraint("CK_ApprovalHistory_Level", "ApprovalLevel IN (1, 2, 3)");

                            t.HasCheckConstraint("CK_ApprovalHistory_Status", "ApprovalStatus IN (0, 1, 2)");
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("POId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UploadedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("POId");

                    b.HasIndex("UploadedBy");

                    b.ToTable("t_po_attachments", (string)null);
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.PODetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("LineTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("LineTotalIncludingTax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("POId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<int>("UOMId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("ItemId");

                    b.HasIndex("POId");

                    b.HasIndex("TaxId");

                    b.HasIndex("UOMId");

                    b.ToTable("t_po_details", null, t =>
                        {
                            t.HasCheckConstraint("CK_PODetail_Quantity", "Quantity > 0");

                            t.HasCheckConstraint("CK_PODetail_UnitPrice", "UnitPrice >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4115),
                            DivisionId = 1,
                            IsDeleted = false,
                            ItemCode = "ITM001",
                            ItemDescription = "Stainless Steel Screw M6x20mm",
                            ItemId = 1,
                            LineNumber = 1,
                            LineTotal = 50000m,
                            LineTotalIncludingTax = 55500m,
                            POId = 1,
                            Quantity = 100m,
                            TaxAmount = 5500m,
                            TaxId = 1,
                            UOMId = 1,
                            UnitPrice = 500m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4116)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4121),
                            DivisionId = 1,
                            IsDeleted = false,
                            ItemCode = "ITM002",
                            ItemDescription = "High Performance Hydraulic Oil",
                            ItemId = 2,
                            LineNumber = 2,
                            LineTotal = 85000m,
                            LineTotalIncludingTax = 94350m,
                            POId = 1,
                            Quantity = 1m,
                            TaxAmount = 9350m,
                            TaxId = 1,
                            UOMId = 2,
                            UnitPrice = 85000m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4122)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4126),
                            DivisionId = 1,
                            IsDeleted = false,
                            ItemCode = "SRV001",
                            ItemDescription = "Preventive maintenance service",
                            ItemId = 4,
                            LineNumber = 3,
                            LineTotal = 500000m,
                            LineTotalIncludingTax = 555000m,
                            POId = 1,
                            Quantity = 1m,
                            TaxAmount = 55000m,
                            TaxId = 1,
                            UOMId = 1,
                            UnitPrice = 500000m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4127)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4131),
                            DivisionId = 2,
                            IsDeleted = false,
                            ItemCode = "ITM003",
                            ItemDescription = "Engine Motor Oil SAE 15W-40",
                            ItemId = 3,
                            LineNumber = 1,
                            LineTotal = 1250000m,
                            LineTotalIncludingTax = 1387500m,
                            POId = 2,
                            Quantity = 1m,
                            TaxAmount = 137500m,
                            TaxId = 1,
                            UOMId = 3,
                            UnitPrice = 1250000m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4132)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApprovalNotes")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("PODate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("POType")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalDue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("VendorId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("VendorIdInt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeptId");

                    b.HasIndex("PONumber")
                        .IsUnique();

                    b.HasIndex("VendorIdInt");

                    b.HasIndex("Status", "CreatedAt");

                    b.HasIndex("VendorId", "PostingDate");

                    b.ToTable("t_po_headers", null, t =>
                        {
                            t.HasCheckConstraint("CK_POHeader_Status", "Status IN (0, 1, 2, 3, 4, 5, 6)");

                            t.HasCheckConstraint("CK_POHeader_TotalDue", "TotalDue >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4045),
                            CreatedById = 1,
                            Currency = "IDR",
                            DeliveryAddress = "Warehouse A, Jl. Gudang No. 10",
                            DeliveryDate = new DateTime(2025, 7, 13, 8, 25, 46, 523, DateTimeKind.Local).AddTicks(4033),
                            DeptId = 3,
                            ExchangeRate = 1.0m,
                            IsDeleted = false,
                            Notes = "Purchase order for maintenance items",
                            PODate = new DateTime(2025, 7, 6, 8, 25, 46, 523, DateTimeKind.Local).AddTicks(4026),
                            PONumber = "PO-2025-001",
                            POType = 2,
                            PostingDate = new DateTime(2025, 7, 6, 8, 25, 46, 523, DateTimeKind.Local).AddTicks(4028),
                            Status = 0,
                            SubTotal = 635000m,
                            TaxAmount = 69850m,
                            TotalDue = 704850m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4045),
                            VendorId = "V001",
                            VendorIdInt = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4071),
                            CreatedById = 2,
                            Currency = "IDR",
                            DeliveryAddress = "Production Floor B",
                            DeliveryDate = new DateTime(2025, 7, 20, 8, 25, 46, 523, DateTimeKind.Local).AddTicks(4066),
                            DeptId = 2,
                            ExchangeRate = 1.0m,
                            IsDeleted = false,
                            Notes = "Urgent purchase for production line",
                            PODate = new DateTime(2025, 7, 6, 8, 25, 46, 523, DateTimeKind.Local).AddTicks(4061),
                            PONumber = "PO-2025-002",
                            POType = 0,
                            PostingDate = new DateTime(2025, 7, 6, 8, 25, 46, 523, DateTimeKind.Local).AddTicks(4062),
                            Status = 1,
                            SubTotal = 1250000m,
                            TaxAmount = 137500m,
                            TotalDue = 1387500m,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 25, 46, 523, DateTimeKind.Utc).AddTicks(4072),
                            VendorId = "V002",
                            VendorIdInt = 2
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.System.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActionUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("RelatedPOId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RelatedPOId");

                    b.HasIndex("UserId", "IsRead", "CreatedAt");

                    b.ToTable("notifications", (string)null);
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.ApprovalMatrix", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.Role", "AcknowledgeRole")
                        .WithMany("AcknowledgeMatrices")
                        .HasForeignKey("AcknowledgeRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Role", "ApproverRole")
                        .WithMany("ApproverMatrices")
                        .HasForeignKey("ApproverRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Role", "CheckerRole")
                        .WithMany("CheckerMatrices")
                        .HasForeignKey("CheckerRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Department", "Department")
                        .WithMany("ApprovalMatrices")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcknowledgeRole");

                    b.Navigation("ApproverRole");

                    b.Navigation("CheckerRole");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Department", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.User", "DeptHead")
                        .WithMany("ManagedDepartments")
                        .HasForeignKey("DeptHeadId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DeptHead");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Item", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.Tax", "DefaultTax")
                        .WithMany("DefaultItems")
                        .HasForeignKey("DefaultTaxId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PO.Domain.Entities.MasterData.UOM", "DefaultUOM")
                        .WithMany("DefaultItems")
                        .HasForeignKey("DefaultUOMId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DefaultTax");

                    b.Navigation("DefaultUOM");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.User", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.User", "Manager")
                        .WithMany("Subordinates")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PO.Domain.Entities.MasterData.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Manager");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POApprovalHistory", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.User", "Approver")
                        .WithMany("ApprovalHistory")
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.PurchaseOrder.POHeader", "POHeader")
                        .WithMany("ApprovalHistory")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("POHeader");
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POAttachment", b =>
                {
                    b.HasOne("PO.Domain.Entities.PurchaseOrder.POHeader", "POHeader")
                        .WithMany("Attachments")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.User", "UploadedByUser")
                        .WithMany("UploadedAttachments")
                        .HasForeignKey("UploadedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("POHeader");

                    b.Navigation("UploadedByUser");
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.PODetail", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.Division", "Division")
                        .WithMany("PODetails")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PO.Domain.Entities.MasterData.Item", "Item")
                        .WithMany("PODetails")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.PurchaseOrder.POHeader", "POHeader")
                        .WithMany("PODetails")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Tax", "Tax")
                        .WithMany("PODetails")
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PO.Domain.Entities.MasterData.UOM", "UOM")
                        .WithMany("PODetails")
                        .HasForeignKey("UOMId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Item");

                    b.Navigation("POHeader");

                    b.Navigation("Tax");

                    b.Navigation("UOM");
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POHeader", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.User", "CreatedByUser")
                        .WithMany("CreatedPurchaseOrders")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Department", "Department")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Vendor", "Vendor")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("VendorIdInt")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Department");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("PO.Domain.Entities.System.Notification", b =>
                {
                    b.HasOne("PO.Domain.Entities.PurchaseOrder.POHeader", "RelatedPO")
                        .WithMany("Notifications")
                        .HasForeignKey("RelatedPOId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PO.Domain.Entities.MasterData.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelatedPO");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Department", b =>
                {
                    b.Navigation("ApprovalMatrices");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Division", b =>
                {
                    b.Navigation("PODetails");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Item", b =>
                {
                    b.Navigation("PODetails");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Role", b =>
                {
                    b.Navigation("AcknowledgeMatrices");

                    b.Navigation("ApproverMatrices");

                    b.Navigation("CheckerMatrices");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Tax", b =>
                {
                    b.Navigation("DefaultItems");

                    b.Navigation("PODetails");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.UOM", b =>
                {
                    b.Navigation("DefaultItems");

                    b.Navigation("PODetails");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.User", b =>
                {
                    b.Navigation("ApprovalHistory");

                    b.Navigation("CreatedPurchaseOrders");

                    b.Navigation("ManagedDepartments");

                    b.Navigation("Notifications");

                    b.Navigation("Subordinates");

                    b.Navigation("UploadedAttachments");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Vendor", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POHeader", b =>
                {
                    b.Navigation("ApprovalHistory");

                    b.Navigation("Attachments");

                    b.Navigation("Notifications");

                    b.Navigation("PODetails");
                });
#pragma warning restore 612, 618
        }
    }
}
