// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PO.Infrastructure.Data;

#nullable disable

namespace PO.Infrastructure.Migrations
{
    [DbContext(typeof(PODbContext))]
    [Migration("20250706012346_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PO.Domain.Entities.MasterData.ApprovalMatrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcknowledgeRoleId")
                        .HasColumnType("int");

                    b.Property<int>("ApproverRoleId")
                        .HasColumnType("int");

                    b.Property<int>("CheckerRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcknowledgeRoleId");

                    b.HasIndex("ApproverRoleId");

                    b.HasIndex("CheckerRoleId");

                    b.HasIndex("DeptId");

                    b.ToTable("master_approval_matrices", null, t =>
                        {
                            t.HasCheckConstraint("CK_ApprovalMatrix_Amount", "MinAmount <= MaxAmount");
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("DeptHeadId")
                        .HasColumnType("int");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeptCode")
                        .IsUnique();

                    b.HasIndex("DeptHeadId");

                    b.ToTable("master_departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1647),
                            DeptCode = "TECH",
                            DeptName = "Technical Department",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1647)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1652),
                            DeptCode = "PROD",
                            DeptName = "Production Department",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1652)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1655),
                            DeptCode = "PURCH",
                            DeptName = "Purchasing Department",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1655)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("DivisionCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionCode")
                        .IsUnique();

                    b.ToTable("master_divisions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1804),
                            DivisionCode = "TECH",
                            DivisionName = "Technical Division",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1804)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultTaxId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultUOMId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Specification")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("StandardPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DefaultTaxId");

                    b.HasIndex("DefaultUOMId");

                    b.HasIndex("ItemCode")
                        .IsUnique();

                    b.ToTable("master_items", (string)null);
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApprovalLevel")
                        .HasColumnType("int");

                    b.Property<bool>("CanAcknowledgePO")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanApprovePO")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanCheckPO")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanCreatePO")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleCode")
                        .IsUnique();

                    b.ToTable("master_roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApprovalLevel = 0,
                            CanAcknowledgePO = false,
                            CanApprovePO = false,
                            CanCheckPO = false,
                            CanCreatePO = true,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1314),
                            IsActive = true,
                            IsDeleted = false,
                            RoleCode = "USR",
                            RoleName = "User Purchasing",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1314)
                        },
                        new
                        {
                            Id = 2,
                            ApprovalLevel = 1,
                            CanAcknowledgePO = false,
                            CanApprovePO = false,
                            CanCheckPO = true,
                            CanCreatePO = true,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1320),
                            IsActive = true,
                            IsDeleted = false,
                            RoleCode = "STF",
                            RoleName = "Staff Purchasing",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1321)
                        },
                        new
                        {
                            Id = 3,
                            ApprovalLevel = 2,
                            CanAcknowledgePO = true,
                            CanApprovePO = false,
                            CanCheckPO = true,
                            CanCreatePO = false,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1324),
                            IsActive = true,
                            IsDeleted = false,
                            RoleCode = "AMG",
                            RoleName = "Assistant Manager",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1325)
                        },
                        new
                        {
                            Id = 4,
                            ApprovalLevel = 2,
                            CanAcknowledgePO = true,
                            CanApprovePO = true,
                            CanCheckPO = false,
                            CanCreatePO = false,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1328),
                            IsActive = true,
                            IsDeleted = false,
                            RoleCode = "MGR",
                            RoleName = "Manager",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1329)
                        },
                        new
                        {
                            Id = 5,
                            ApprovalLevel = 3,
                            CanAcknowledgePO = false,
                            CanApprovePO = true,
                            CanCheckPO = false,
                            CanCreatePO = false,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1332),
                            IsActive = true,
                            IsDeleted = false,
                            RoleCode = "GM",
                            RoleName = "General Manager",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1333)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TaxType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaxCode")
                        .IsUnique();

                    b.ToTable("master_taxes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1764),
                            IsActive = true,
                            IsDeleted = false,
                            TaxCode = "M11",
                            TaxDescription = "VAT 11%",
                            TaxRate = 11.00m,
                            TaxType = "VAT",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1765)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1768),
                            IsActive = true,
                            IsDeleted = false,
                            TaxCode = "M12",
                            TaxDescription = "VAT 12%",
                            TaxRate = 12.00m,
                            TaxType = "VAT",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1769)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.UOM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BaseUnit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("ConversionFactor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UOMCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UOMDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UOMCode")
                        .IsUnique();

                    b.ToTable("master_uoms", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseUnit = "PCS",
                            ConversionFactor = 1.000000m,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1701),
                            IsActive = true,
                            IsDeleted = false,
                            UOMCode = "PCS",
                            UOMDescription = "Pieces",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1702)
                        },
                        new
                        {
                            Id = 2,
                            BaseUnit = "CAN",
                            ConversionFactor = 1.000000m,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1705),
                            IsActive = true,
                            IsDeleted = false,
                            UOMCode = "CAN3.6",
                            UOMDescription = "3.6 Liter Can",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1705)
                        },
                        new
                        {
                            Id = 3,
                            BaseUnit = "CAN",
                            ConversionFactor = 1.000000m,
                            CreatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1708),
                            IsActive = true,
                            IsDeleted = false,
                            UOMCode = "CAN50",
                            UOMDescription = "50 Liter Can",
                            UpdatedAt = new DateTime(2025, 7, 6, 1, 23, 45, 368, DateTimeKind.Utc).AddTicks(1709)
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployeeCode")
                        .IsUnique();

                    b.HasIndex("ManagerId");

                    b.HasIndex("RoleId");

                    b.ToTable("master_users", (string)null);
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TaxId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("VendorId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("VendorId")
                        .IsUnique();

                    b.ToTable("master_vendors", (string)null);
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POApprovalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ApprovalLevel")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<int>("ApproverId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("POId")
                        .HasColumnType("int");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("POId", "ApprovalLevel");

                    b.ToTable("t_po_approval_histories", null, t =>
                        {
                            t.HasCheckConstraint("CK_ApprovalHistory_Level", "ApprovalLevel IN (1, 2, 3)");

                            t.HasCheckConstraint("CK_ApprovalHistory_Status", "ApprovalStatus IN (0, 1, 2)");
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("POId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UploadedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("POId");

                    b.HasIndex("UploadedBy");

                    b.ToTable("t_po_attachments", (string)null);
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.PODetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("LineTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("LineTotalIncludingTax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("POId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<int>("UOMId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("ItemId");

                    b.HasIndex("POId");

                    b.HasIndex("TaxId");

                    b.HasIndex("UOMId");

                    b.ToTable("t_po_details", null, t =>
                        {
                            t.HasCheckConstraint("CK_PODetail_Quantity", "Quantity > 0");

                            t.HasCheckConstraint("CK_PODetail_UnitPrice", "UnitPrice >= 0");
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApprovalNotes")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("PODate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("POType")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalDue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("VendorId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("VendorIdInt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeptId");

                    b.HasIndex("PONumber")
                        .IsUnique();

                    b.HasIndex("VendorIdInt");

                    b.HasIndex("Status", "CreatedAt");

                    b.HasIndex("VendorId", "PostingDate");

                    b.ToTable("t_po_headers", null, t =>
                        {
                            t.HasCheckConstraint("CK_POHeader_Status", "Status IN (0, 1, 2, 3, 4, 5, 6)");

                            t.HasCheckConstraint("CK_POHeader_TotalDue", "TotalDue >= 0");
                        });
                });

            modelBuilder.Entity("PO.Domain.Entities.System.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActionUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("RelatedPOId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RelatedPOId");

                    b.HasIndex("UserId", "IsRead", "CreatedAt");

                    b.ToTable("notifications", (string)null);
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.ApprovalMatrix", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.Role", "AcknowledgeRole")
                        .WithMany("AcknowledgeMatrices")
                        .HasForeignKey("AcknowledgeRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Role", "ApproverRole")
                        .WithMany("ApproverMatrices")
                        .HasForeignKey("ApproverRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Role", "CheckerRole")
                        .WithMany("CheckerMatrices")
                        .HasForeignKey("CheckerRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Department", "Department")
                        .WithMany("ApprovalMatrices")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcknowledgeRole");

                    b.Navigation("ApproverRole");

                    b.Navigation("CheckerRole");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Department", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.User", "DeptHead")
                        .WithMany("ManagedDepartments")
                        .HasForeignKey("DeptHeadId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DeptHead");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Item", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.Tax", "DefaultTax")
                        .WithMany("DefaultItems")
                        .HasForeignKey("DefaultTaxId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PO.Domain.Entities.MasterData.UOM", "DefaultUOM")
                        .WithMany("DefaultItems")
                        .HasForeignKey("DefaultUOMId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DefaultTax");

                    b.Navigation("DefaultUOM");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.User", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.User", "Manager")
                        .WithMany("Subordinates")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PO.Domain.Entities.MasterData.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Manager");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POApprovalHistory", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.User", "Approver")
                        .WithMany("ApprovalHistory")
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.PurchaseOrder.POHeader", "POHeader")
                        .WithMany("ApprovalHistory")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("POHeader");
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POAttachment", b =>
                {
                    b.HasOne("PO.Domain.Entities.PurchaseOrder.POHeader", "POHeader")
                        .WithMany("Attachments")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.User", "UploadedByUser")
                        .WithMany("UploadedAttachments")
                        .HasForeignKey("UploadedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("POHeader");

                    b.Navigation("UploadedByUser");
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.PODetail", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.Division", "Division")
                        .WithMany("PODetails")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PO.Domain.Entities.MasterData.Item", "Item")
                        .WithMany("PODetails")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.PurchaseOrder.POHeader", "POHeader")
                        .WithMany("PODetails")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Tax", "Tax")
                        .WithMany("PODetails")
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PO.Domain.Entities.MasterData.UOM", "UOM")
                        .WithMany("PODetails")
                        .HasForeignKey("UOMId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Item");

                    b.Navigation("POHeader");

                    b.Navigation("Tax");

                    b.Navigation("UOM");
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POHeader", b =>
                {
                    b.HasOne("PO.Domain.Entities.MasterData.User", "CreatedByUser")
                        .WithMany("CreatedPurchaseOrders")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Department", "Department")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PO.Domain.Entities.MasterData.Vendor", "Vendor")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("VendorIdInt")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Department");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("PO.Domain.Entities.System.Notification", b =>
                {
                    b.HasOne("PO.Domain.Entities.PurchaseOrder.POHeader", "RelatedPO")
                        .WithMany("Notifications")
                        .HasForeignKey("RelatedPOId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PO.Domain.Entities.MasterData.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelatedPO");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Department", b =>
                {
                    b.Navigation("ApprovalMatrices");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Division", b =>
                {
                    b.Navigation("PODetails");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Item", b =>
                {
                    b.Navigation("PODetails");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Role", b =>
                {
                    b.Navigation("AcknowledgeMatrices");

                    b.Navigation("ApproverMatrices");

                    b.Navigation("CheckerMatrices");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Tax", b =>
                {
                    b.Navigation("DefaultItems");

                    b.Navigation("PODetails");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.UOM", b =>
                {
                    b.Navigation("DefaultItems");

                    b.Navigation("PODetails");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.User", b =>
                {
                    b.Navigation("ApprovalHistory");

                    b.Navigation("CreatedPurchaseOrders");

                    b.Navigation("ManagedDepartments");

                    b.Navigation("Notifications");

                    b.Navigation("Subordinates");

                    b.Navigation("UploadedAttachments");
                });

            modelBuilder.Entity("PO.Domain.Entities.MasterData.Vendor", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("PO.Domain.Entities.PurchaseOrder.POHeader", b =>
                {
                    b.Navigation("ApprovalHistory");

                    b.Navigation("Attachments");

                    b.Navigation("Notifications");

                    b.Navigation("PODetails");
                });
#pragma warning restore 612, 618
        }
    }
}
